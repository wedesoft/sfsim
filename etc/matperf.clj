(require '[clojure.reflect :as r])
(require '[clojure.pprint :refer (pprint print-table)])
(import '[org.ejml.simple SimpleMatrix SimpleBase])

(def m (SimpleMatrix. 3 3 true (float-array [1 1 1 0 2 2 0 0 4])))
(def v (SimpleMatrix. 3 1 true (float-array [1 2 3])))
(:bases (r/reflect SimpleMatrix))
(pprint (sort (map :name (:members (r/reflect m)))))
(pprint (sort (map :name (:members (r/reflect (.getMatrix m))))))
(pprint (sort (map :name (:members (r/reflect SimpleBase)))))
(.normF v)
(.plus v v)
(.invert m)
(.mult m v)
(.scale m 2.0)
(.transpose m)
(.getRow m 0)
(.getColumn m 0)
(.get m 1 1)
(.dot v v)
(.determinant m)
(.data (.getMatrix m))
